# -*- coding: utf-8 -*-
"""task

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sC2c75IMhchqXGeFIQI7n_5W3IlEJwFn
"""

import pandas as pd
from sklearn.preprocessing import MinMaxScaler, StandardScaler, LabelEncoder

# Sample DataFrame (replace with your actual data)
data = {
    'A': [1, 2, None, 4, 5],
    'B': ['cat', 'dog', 'cat', None, 'dog'],
    'Annual_Income': [50000, 60000, 70000, 80000, 90000],
    'Spending_Score': [1, 2, 3, 4, 5],
    'Purchase_Frequency': [5, 4, 3, 2, 1],
    'Gender': ['Male', 'Female', 'Female', 'Male', 'Female'],
    'Preferred_Category': ['Electronics', 'Clothing', 'Electronics', 'Clothing', 'Electronics']
}

df = pd.DataFrame(data)

# 1. Handle Missing Values
print("Missing Values Count:\n", df.isnull().sum())

# Option 1: Remove rows with missing values
df_dropped = df.dropna()
print("\nData after dropping missing values:\n", df_dropped)

# Option 2: Fill missing values
df_filled = df.copy()
df_filled['A'].fillna(df_filled['A'].mean(), inplace=True)  # Fill numerical with mean
df_filled['B'].fillna(df_filled['B'].mode()[0], inplace=True)  # Fill categorical with mode

print("\nData after filling missing values:\n", df_filled)

# 2. Remove Duplicate Entries
df_no_duplicates = df_filled.drop_duplicates()
print("\nData after dropping duplicates:\n", df_no_duplicates)

# 3. Normalize 'Annual_Income' & 'Spending_Score' using Min-Max Scaling
scaler = MinMaxScaler()
df_no_duplicates[['Annual_Income', 'Spending_Score']] = scaler.fit_transform(df_no_duplicates[['Annual_Income', 'Spending_Score']])

# 4. Standardize 'Purchase_Frequency' using Z-score Normalization
scaler = StandardScaler()
df_no_duplicates[['Purchase_Frequency']] = scaler.fit_transform(df_no_duplicates[['Purchase_Frequency']])

# 5. Convert 'Gender' into numerical values using One-Hot Encoding
df_no_duplicates = pd.get_dummies(df_no_duplicates, columns=['Gender'], drop_first=True)  # 'drop_first=True' avoids dummy variable trap

# 6. Label encode the 'Preferred_Category' column
label_encoder = LabelEncoder()
df_no_duplicates['Preferred_Category'] = label_encoder.fit_transform(df_no_duplicates['Preferred_Category'])

# Display the processed DataFrame
print("\nProcessed DataFrame:\n", df_no_duplicates)